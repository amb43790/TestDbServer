#!/usr/bin/env perl

use TestDbServer::CmdLine qw(make_user_agent url_for assert_success);
use LWP;
use Getopt::Long;
use JSON qw(decode_json);

my $opts = {};
GetOptions($opts, 'owner=s', 'based-on','short-help','help');

print_short_help() if ($opts->{'short-help'});
print_help() if ($opts->{help});

unless ($opts->{owner} xor $opts->{'based-on'}) {
    print STDERR "You must use one of --owner or --based-on, but not both\n";
    exit 1;
}

my $ua = make_user_agent();
my @options = $opts->{owner}
                ? ( owner => $opts->{owner} )
                : ( based_on => $opts->{'based-on'} );
my $req = HTTP::Request->new(POST => url_for('databases', \@options));
my $rsp = $ua->request($req);
assert_success $rsp;

my $new_db = decode_json($rsp->content);
print "CREATED ",$new_db->{name},"\n";
exit 0;



sub print_short_help {
    print "create a test database\n";
    exit;
}

sub print_help {
    print <<"EOS";
Usage: $0 [--owner <owner>] [--based-on <template>]

Create a new test database.  You must specify either --owner or --based-on,
but not both.

If run with --owner, it creates a new, empty test database with the given
owner.  This owner must already exist as a role on the database server.

If run with --based-on, it creates a test database using the named template.
EOS
    exit;
}
